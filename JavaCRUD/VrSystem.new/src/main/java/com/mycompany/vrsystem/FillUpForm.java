package com.mycompany.vrsystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.Map;
import java.sql.ResultSet;

public class FillUpForm extends javax.swing.JFrame {
private Connection conn;
    //Creates new form FillUpForm    
    public FillUpForm() {
        initComponents();
        this.setTitle("Fill Up Form");
        
    }
    
  
     //This method is called from within the constructor to initialize the form.
     //WARNING: Do NOT modify this code. The content of this method is always
     //regenerated by the Form Editor.
     
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Pick Up Date");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 90, 20));

        jLabel2.setText("Return Date");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 180, -1));
        jPanel1.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 180, -1));

        jLabel3.setText("Places");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        jLabel4.setText("Destination");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nasugbu Batangas", "Calatagan Batangas", "Calaca, Batangas", "Lemery, Batangas" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 180, -1));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 180, -1));

        jLabel5.setText("Payment Method");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, -1));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Cash");
        jPanel1.add(jRadioButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 210, -1, -1));

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Gcash");
        jPanel1.add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, -1, -1));

        jLabel6.setText("Additional Fees:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 180, -1));

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, -1, -1));

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, -1, -1));

        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 330, -1, -1));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1-  Mitsubshi Montero", "2 - Toyota Altis", "3 - Suzuki XL7", "4 - Nissan Terra", "5 - Mazda CX8 ", "6 - VAN | Toyota Super Grandia", "7 - Toyota Coster", "8 - Kia Carnival", "9 - Mitsubishi L300", "10 - Ford Next Gen Everest" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 180, -1));

        jLabel8.setText("List of Cars:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));

        jButton6.setText("Print Receipt");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon("C:\\Users\\baldo\\Downloads\\Car Rental Images\\SIgnUpBackgroundImg.jpg")); // NOI18N
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 370));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pick Up Date", "Return Date", "Destination", "Payment Method", "Additional Fees", "Status", "car_ID", "car_name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 710, 370));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        //get selected value from combobox
        String selectedValue = jComboBox1.getSelectedItem().toString();
        
        //now set this selected value into textfield
        jTextField1.setText(selectedValue);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here: Submitt Button
        
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: //Submitt Button
        String destination = jComboBox1.getSelectedItem().toString();
        Map<String, Double> destinationFees = new HashMap<>();
        destinationFees.put("Nasugbu Batangas", 0.0); // Example fee for destinations
        destinationFees.put("Calatagan Batangas", 500.0);
        destinationFees.put("Calaca, Batangas", 350.0);
        destinationFees.put("Lemery, Batangas", 450.0);

        // Calculate the additional cost based on destination
        double additionalFee = destinationFees.getOrDefault(destination, 0.0);
        double baseCost = 0.0; // Base cost for the reservation
        double additionalFees = baseCost + additionalFee;
        String car_name = jComboBox2.getSelectedItem().toString();
        int car_Id = Integer.parseInt(car_name.split(" - ")[0]); // Extract car_id
        
        // Retrieve form inputs
        java.util.Date pickupDate = jDateChooser1.getDate();
        java.util.Date returnDate = jDateChooser2.getDate();
        String paymentMethod = jRadioButton1.isSelected() ? "Cash" : "GCash";
        String status = "Successful";
        
            // Check if car is available for the chosen dates
    if (!checkAvailabilityStatus(car_Id, pickupDate, returnDate)) {
        javax.swing.JOptionPane.showMessageDialog(this, 
            "This vehicle is already booked for the selected dates. Please choose another date or vehicle.");
        return; // Stop further processing
    }
        
        // Validate that pickup and return dates are provided
    if (jDateChooser1.getDate() == null || jDateChooser2.getDate() == null) {
        javax.swing.JOptionPane.showMessageDialog(this, "Pick-up and Return Dates are required.");
    } else if (jDateChooser2.getDate().before(jDateChooser1.getDate())) {  // Validate that the return date is not before the pickup date
        javax.swing.JOptionPane.showMessageDialog(this, "Return Date/Time cannot be before Pick-up Date/Time.");
    } else if  (!jRadioButton1.isSelected() && !jRadioButton2.isSelected()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a payment method.");
        return;
    } else if(jComboBox1.getSelectedIndex() == -1){
    // Validate that an item is selected in the combo box
    javax.swing.JOptionPane.showMessageDialog(this, "Please select an item from the list.");
    }  else {
        jTextField2.setText("₱" + additionalFees);
        jTextField2.setText("₱" + additionalFees);
        javax.swing.JOptionPane.showMessageDialog(this, "Total cost for " + destination + " is ₱" + additionalFees);
        javax.swing.JOptionPane.showMessageDialog(this, "Booking Success!");
    }
    // FillUpFromClass form = new FillUpFromClass(jDateChooser1, jDateChooser2, destination, paymentMethod, additionalFees, status, car_Id, car_name);   
        

        // Database connection details
        String url = "jdbc:mysql://localhost:3306/vehiclerentalsystemnew"; // Replace with your database name
        String username = "admin"; // Default for XAMPP
        String password = "admin123"; // Default for XAMPP (empty)

        
        
    // SQL Insert Query
    String sql = "INSERT INTO reservations (pickup_date, return_date, destination, payment_method, additionalFees, availability_status, car_id, car_name) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
    
    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(sql)) {
       
        
        // Save to database
        stmt.setTimestamp(1, new java.sql.Timestamp(pickupDate.getTime()));
        stmt.setTimestamp(2, new java.sql.Timestamp(returnDate.getTime()));
        stmt.setString(3, destination);
        stmt.setString(4, paymentMethod);
        stmt.setDouble(5, additionalFees);
        stmt.setString(6, status);
        stmt.setInt(7, car_Id); // Add car_id
        stmt.setString(8, car_name);

        stmt.executeUpdate();
        
        //Add data to JTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{
            pickupDate,
            returnDate,
            destination,
            paymentMethod,
            additionalFees,
            status,
            car_Id,
            car_name
        });

        // Confirmation message
        javax.swing.JOptionPane.showMessageDialog(this, "Reservation successfully submitted!");
    } catch (SQLException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        ex.printStackTrace();
    } catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid total cost format. Please check your inputs.");
    }
}
    private boolean checkAvailabilityStatus(int car_Id, java.util.Date pickupDate, java.util.Date returnDate) {
    String url = "jdbc:mysql://localhost:3306/vehiclerentalsystemnew"; // Update database connection details
    String username = "admin";
    String password = "admin123";

    String query = "SELECT * FROM reservations WHERE car_id = ? AND " +
                   "((pickup_date <= ? AND return_date >= ?) OR " +
                   "(pickup_date <= ? AND return_date >= ?))";

    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query)) {

        stmt.setInt(1, car_Id);
        stmt.setTimestamp(2, new java.sql.Timestamp(returnDate.getTime()));
        stmt.setTimestamp(3, new java.sql.Timestamp(pickupDate.getTime()));
        stmt.setTimestamp(4, new java.sql.Timestamp(returnDate.getTime()));
        stmt.setTimestamp(5, new java.sql.Timestamp(pickupDate.getTime()));

        ResultSet rs = stmt.executeQuery();

        return !rs.next(); // If no conflicts, car is available

    } catch (SQLException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Error checking availability: " + ex.getMessage());
        ex.printStackTrace();
        return false; // Default to unavailable in case of error
    }
    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:Cancel Button
        // Reset all form fields
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
        jComboBox1.setSelectedIndex(0); // Reset to default item
        jRadioButton1.setSelected(false); // Unselect radio buttons
        jRadioButton2.setSelected(false);
        jTextField1.setText(""); // Clear the text field
        jTextField2.setText(""); // Optionally, clear another text field if applicable
    
    // Optionally, you can display a message to confirm the reset
    javax.swing.JOptionPane.showMessageDialog(this, "Form has been cleared.");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    String url = "jdbc:mysql://localhost:3306/vehiclerentalsystemnew";
    String username = "root";
    String password = "";
    
    

    String query = "SELECT car_id, car_name FROM reservations WHERE availability_status = 'Available'";

    try (Connection conn = DriverManager.getConnection(url, username, password);
         var stmt = conn.createStatement();
         var rs = stmt.executeQuery(query)) {

        while (rs.next()) {
            int car_Id = rs.getInt("car_id");
            String car_name = rs.getString("car_name");
            jComboBox2.addItem(car_Id + " - " + car_name); // Add car_id and name to dropdown
        }

    } catch (SQLException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Error loading car data: " + ex.getMessage());
        ex.printStackTrace();
    }


    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Vehicles toVehicles = new Vehicles();
        toVehicles.show();
        
        dispose();
                
    }//GEN-LAST:event_jButton3ActionPerformed
private void readRecords() {
        try {
            String query = "SELECT * FROM cars"; // Adjust query based on your database schema
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Clear existing rows in the table

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("car_id"),     // Replace with actual column names from your database
                    rs.getString("car_name"),
                    rs.getString("car_type"),
                    
                };
                model.addRow(row);               
            }
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Error loading records: " + e.getMessage());
        }
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //delete button
        
        
        int selectedColumn = jTable1.getSelectedRow();
        if (selectedColumn == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a reservation to delete.");
            return;
        }

        Object carIdObject = jTable1.getValueAt(selectedColumn, 7); // Assuming Car ID is in column 7
        if (carIdObject == null || carIdObject.toString().trim().isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Car ID is empty or invalid.");
            return;
        }

        String carIdString = carIdObject.toString().trim();
        int car_Id;
        try {
            car_Id = Integer.parseInt(carIdString);
        } catch (NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Invalid Car ID format in the table.");
            return;
        }

        try {
            String deleteQuery = "DELETE FROM cars WHERE car_id = ?";
            PreparedStatement stmt = conn.prepareStatement(deleteQuery);
            stmt.setInt(1, car_Id);
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Record deleted successfully.");
                readRecords();
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "No matching record found to delete.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Error while deleting record: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         // Database connection details
    String url = "jdbc:mysql://localhost:3306/vehiclerentalsystemnew"; // Replace with your DB name
    String username = "admin"; // Replace with your username
    String password = "admin123"; // Replace with your password

    // Query to fetch reservation data
    String query = "SELECT pickup_date, return_date, destination, payment_method, additionalFees, availability_status, car_id, car_name FROM reservations";

    try (Connection conn = DriverManager.getConnection(url, username, password);
         PreparedStatement stmt = conn.prepareStatement(query);
         ResultSet rs = stmt.executeQuery()) {

        // Get the table model
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        // Clear existing rows
        model.setRowCount(0);

        // Add rows to the JTable from the ResultSet
        while (rs.next()) {
            model.addRow(new Object[]{
                rs.getTimestamp("pickup_date"),
                rs.getTimestamp("return_date"),
                rs.getString("destination"),
                rs.getString("payment_method"),
                rs.getDouble("additionalFees"),
                rs.getString("availability_status"),
                rs.getInt("car_id"),
                rs.getString("car_name")
            });
        }

        javax.swing.JOptionPane.showMessageDialog(this, "Data loaded successfully!");

    } catch (SQLException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        ex.printStackTrace();
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        // Create a string representing the receipt
    String receipt = "------------------ Payment Receipt ------------------\n"
                   + "Car Id/Name: " + jComboBox2.getSelectedItem().toString() + "\n"
                   + "Destination: " + jComboBox1.getSelectedItem() + "\n"
                   + "Pick-Up Date: " + jDateChooser1.getDate() + "\n"
                   + "Return Date: " + jDateChooser2.getDate() + "\n"
                   + "----------------------------------------------------";

    // Use the Java Print API
    try {
        boolean complete = new javax.swing.JTextArea(receipt).print();
        if (complete) {
            javax.swing.JOptionPane.showMessageDialog(this, "Receipt printed successfully.");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Printing was canceled.");
        }
    } catch (java.awt.print.PrinterException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    
     // @param args the command line arguments
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FillUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FillUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FillUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FillUpForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        // Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FillUpForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
